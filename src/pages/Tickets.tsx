
import { useState } from "react";
import { Link } from "react-router-dom";
import {
  Table,
  TableBody,
  TableCell,
  TableHead,
  TableHeader,
  TableRow,
} from "@/components/ui/table";
import { Input } from "@/components/ui/input";
import { Button } from "@/components/ui/button";
import { 
  Select,
  SelectContent,
  SelectItem,
  SelectTrigger,
  SelectValue 
} from "@/components/ui/select";
import { useToast } from "@/hooks/use-toast";
import { Plus } from "lucide-react";

// –í—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏
const ticketsData = [
  {
    id: "T-1001",
    customer: "–ê–ª–µ–∫—Å–∞–Ω–¥—Ä –ü–µ—Ç—Ä–æ–≤",
    subject: "–í–æ–ø—Ä–æ—Å –ø–æ –æ–ø–ª–∞—Ç–µ",
    status: "–ù–æ–≤—ã–π",
    source: "Email",
    date: "2025-05-19T09:30:00",
    assignedTo: "–û–ø–µ—Ä–∞—Ç–æ—Ä 1",
  },
  {
    id: "T-1002",
    customer: "–ï–ª–µ–Ω–∞ –°–º–∏—Ä–Ω–æ–≤–∞",
    subject: "–ù–µ —Ä–∞–±–æ—Ç–∞–µ—Ç —Å–µ—Ä–≤–∏—Å",
    status: "–í —Ä–∞–±–æ—Ç–µ",
    source: "Telegram",
    date: "2025-05-18T16:45:00",
    assignedTo: "–û–ø–µ—Ä–∞—Ç–æ—Ä 2",
  },
  {
    id: "T-1003",
    customer: "–ò–≤–∞–Ω –°–æ–∫–æ–ª–æ–≤",
    subject: "–í–æ–∑–≤—Ä–∞—Ç —Ç–æ–≤–∞—Ä–∞",
    status: "–û–∂–∏–¥–∞–µ—Ç –∫–ª–∏–µ–Ω—Ç–∞",
    source: "WhatsApp",
    date: "2025-05-17T12:15:00",
    assignedTo: "–û–ø–µ—Ä–∞—Ç–æ—Ä 1",
  },
  {
    id: "T-1004",
    customer: "–ú–∞—Ä–∏—è –ò–≤–∞–Ω–æ–≤–∞",
    subject: "–ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è –ø–æ —Ç–æ–≤–∞—Ä—É",
    status: "–ó–∞–∫—Ä—ã—Ç",
    source: "VK.com",
    date: "2025-05-16T14:22:00",
    assignedTo: "–û–ø–µ—Ä–∞—Ç–æ—Ä 3",
  },
  {
    id: "T-1005",
    customer: "–î–º–∏—Ç—Ä–∏–π –ö–æ–∑–ª–æ–≤",
    subject: "–ü—Ä–æ–±–ª–µ–º–∞ —Å –¥–æ—Å—Ç–∞–≤–∫–æ–π",
    status: "–ù–æ–≤—ã–π",
    source: "–ß–∞—Ç –Ω–∞ —Å–∞–π—Ç–µ",
    date: "2025-05-19T11:20:00",
    assignedTo: "",
  },
  {
    id: "T-1006",
    customer: "–ê–Ω–Ω–∞ –ú–æ—Ä–æ–∑–æ–≤–∞",
    subject: "–ó–∞–ø—Ä–æ—Å –Ω–∞ –ø—Ä–∞–π—Å-–ª–∏—Å—Ç",
    status: "–í —Ä–∞–±–æ—Ç–µ",
    source: "–§–æ—Ä–º–∞ –Ω–∞ —Å–∞–π—Ç–µ",
    date: "2025-05-18T10:05:00",
    assignedTo: "–û–ø–µ—Ä–∞—Ç–æ—Ä 2",
  },
  {
    id: "T-1007",
    customer: "–°–µ—Ä–≥–µ–π –í–æ–ª–∫–æ–≤",
    subject: "–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–π —Å–±–æ–π –≤ –ª–∏—á–Ω–æ–º –∫–∞–±–∏–Ω–µ—Ç–µ",
    status: "–ù–æ–≤—ã–π",
    source: "Email",
    date: "2025-05-19T08:45:00",
    assignedTo: "",
  },
  {
    id: "T-1008",
    customer: "–û–ª—å–≥–∞ –ü–∞–≤–ª–æ–≤–∞",
    subject: "–ò–∑–º–µ–Ω–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞",
    status: "–ó–∞–∫—Ä—ã—Ç",
    source: "WhatsApp",
    date: "2025-05-15T13:30:00",
    assignedTo: "–û–ø–µ—Ä–∞—Ç–æ—Ä 1",
  },
];

const getStatusClass = (status: string) => {
  switch (status) {
    case "–ù–æ–≤—ã–π":
      return "bg-blue-100 text-blue-800 px-2 py-1 rounded-md text-xs font-medium";
    case "–í —Ä–∞–±–æ—Ç–µ":
      return "bg-yellow-100 text-yellow-800 px-2 py-1 rounded-md text-xs font-medium";
    case "–û–∂–∏–¥–∞–µ—Ç –∫–ª–∏–µ–Ω—Ç–∞":
      return "bg-purple-100 text-purple-800 px-2 py-1 rounded-md text-xs font-medium";
    case "–ó–∞–∫—Ä—ã—Ç":
      return "bg-green-100 text-green-800 px-2 py-1 rounded-md text-xs font-medium";
    default:
      return "bg-gray-100 text-gray-800 px-2 py-1 rounded-md text-xs font-medium";
  }
};

const getSourceIcon = (source: string) => {
  switch (source) {
    case "Email":
      return "üìß";
    case "Telegram":
      return "üì±";
    case "WhatsApp":
      return "üìû";
    case "VK.com":
      return "üë•";
    case "–ß–∞—Ç –Ω–∞ —Å–∞–π—Ç–µ":
      return "üí¨";
    case "–§–æ—Ä–º–∞ –Ω–∞ —Å–∞–π—Ç–µ":
      return "üìù";
    default:
      return "üí¨";
  }
};

export default function Tickets() {
  const [tickets, setTickets] = useState(ticketsData);
  const [searchQuery, setSearchQuery] = useState("");
  const [statusFilter, setStatusFilter] = useState("");
  const [sourceFilter, setSourceFilter] = useState("");
  const { toast } = useToast();

  const handleStatusChange = (ticketId: string, newStatus: string) => {
    setTickets((prev) =>
      prev.map((ticket) => {
        if (ticket.id === ticketId) {
          toast({
            title: "–°—Ç–∞—Ç—É—Å –æ–±–Ω–æ–≤–ª–µ–Ω",
            description: `–¢–∏–∫–µ—Ç ${ticketId} —Ç–µ–ø–µ—Ä—å –∏–º–µ–µ—Ç —Å—Ç–∞—Ç—É—Å "${newStatus}"`,
          });
          return { ...ticket, status: newStatus };
        }
        return ticket;
      })
    );
  };

  const handleAssignmentChange = (ticketId: string, operator: string) => {
    setTickets((prev) =>
      prev.map((ticket) => {
        if (ticket.id === ticketId) {
          toast({
            title: "–ù–∞–∑–Ω–∞—á–µ–Ω –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—ã–π",
            description: `–¢–∏–∫–µ—Ç ${ticketId} –Ω–∞–∑–Ω–∞—á–µ–Ω –Ω–∞ "${operator}"`,
          });
          return { ...ticket, assignedTo: operator };
        }
        return ticket;
      })
    );
  };

  const filteredTickets = tickets.filter((ticket) => {
    const matchesSearch =
      searchQuery === "" ||
      ticket.id.toLowerCase().includes(searchQuery.toLowerCase()) ||
      ticket.customer.toLowerCase().includes(searchQuery.toLowerCase()) ||
      ticket.subject.toLowerCase().includes(searchQuery.toLowerCase());

    const matchesStatus = statusFilter === "" || ticket.status === statusFilter;
    const matchesSource = sourceFilter === "" || ticket.source === sourceFilter;

    return matchesSearch && matchesStatus && matchesSource;
  });

  const formatDate = (dateString: string) => {
    const date = new Date(dateString);
    return new Intl.DateTimeFormat("ru-RU", {
      day: "2-digit",
      month: "2-digit",
      hour: "2-digit",
      minute: "2-digit",
    }).format(date);
  };

  return (
    <div className="container mx-auto p-4">
      <div className="flex justify-between items-center mb-6">
        <h1 className="text-3xl font-bold">–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ç–∏–∫–µ—Ç–∞–º–∏</h1>
        <Button asChild>
          <Link to="/tickets/new">
            <Plus className="h-4 w-4 mr-2" /> –°–æ–∑–¥–∞—Ç—å —Ç–∏–∫–µ—Ç
          </Link>
        </Button>
      </div>

      <div className="grid grid-cols-1 md:grid-cols-3 gap-4 mb-6">
        <div>
          <Input
            placeholder="–ü–æ–∏—Å–∫ –ø–æ ID, –∫–ª–∏–µ–Ω—Ç—É –∏–ª–∏ —Ç–µ–º–µ..."
            value={searchQuery}
            onChange={(e) => setSearchQuery(e.target.value)}
            className="w-full"
          />
        </div>
        <div>
          <Select value={statusFilter} onValueChange={setStatusFilter}>
            <SelectTrigger>
              <SelectValue placeholder="–§–∏–ª—å—Ç—Ä –ø–æ —Å—Ç–∞—Ç—É—Å—É" />
            </SelectTrigger>
            <SelectContent>
              <SelectItem value="">–í—Å–µ —Å—Ç–∞—Ç—É—Å—ã</SelectItem>
              <SelectItem value="–ù–æ–≤—ã–π">–ù–æ–≤—ã–π</SelectItem>
              <SelectItem value="–í —Ä–∞–±–æ—Ç–µ">–í —Ä–∞–±–æ—Ç–µ</SelectItem>
              <SelectItem value="–û–∂–∏–¥–∞–µ—Ç –∫–ª–∏–µ–Ω—Ç–∞">–û–∂–∏–¥–∞–µ—Ç –∫–ª–∏–µ–Ω—Ç–∞</SelectItem>
              <SelectItem value="–ó–∞–∫—Ä—ã—Ç">–ó–∞–∫—Ä—ã—Ç</SelectItem>
            </SelectContent>
          </Select>
        </div>
        <div>
          <Select value={sourceFilter} onValueChange={setSourceFilter}>
            <SelectTrigger>
              <SelectValue placeholder="–§–∏–ª—å—Ç—Ä –ø–æ –∏—Å—Ç–æ—á–Ω–∏–∫—É" />
            </SelectTrigger>
            <SelectContent>
              <SelectItem value="">–í—Å–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∏</SelectItem>
              <SelectItem value="Email">Email</SelectItem>
              <SelectItem value="Telegram">Telegram</SelectItem>
              <SelectItem value="WhatsApp">WhatsApp</SelectItem>
              <SelectItem value="VK.com">VK.com</SelectItem>
              <SelectItem value="–ß–∞—Ç –Ω–∞ —Å–∞–π—Ç–µ">–ß–∞—Ç –Ω–∞ —Å–∞–π—Ç–µ</SelectItem>
              <SelectItem value="–§–æ—Ä–º–∞ –Ω–∞ —Å–∞–π—Ç–µ">–§–æ—Ä–º–∞ –Ω–∞ —Å–∞–π—Ç–µ</SelectItem>
            </SelectContent>
          </Select>
        </div>
      </div>

      <div className="bg-white rounded-md shadow">
        <Table>
          <TableHeader>
            <TableRow>
              <TableHead>ID</TableHead>
              <TableHead>–ö–ª–∏–µ–Ω—Ç</TableHead>
              <TableHead>–¢–µ–º–∞</TableHead>
              <TableHead>–ò—Å—Ç–æ—á–Ω–∏–∫</TableHead>
              <TableHead>–°—Ç–∞—Ç—É—Å</TableHead>
              <TableHead>–û—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—ã–π</TableHead>
              <TableHead>–î–∞—Ç–∞</TableHead>
              <TableHead></TableHead>
            </TableRow>
          </TableHeader>
          <TableBody>
            {filteredTickets.length > 0 ? (
              filteredTickets.map((ticket) => (
                <TableRow key={ticket.id} className="cursor-pointer hover:bg-muted/50">
                  <TableCell className="font-medium">{ticket.id}</TableCell>
                  <TableCell>{ticket.customer}</TableCell>
                  <TableCell>{ticket.subject}</TableCell>
                  <TableCell>
                    <span title={ticket.source}>
                      {getSourceIcon(ticket.source)} {ticket.source}
                    </span>
                  </TableCell>
                  <TableCell>
                    <Select 
                      value={ticket.status} 
                      onValueChange={(value) => handleStatusChange(ticket.id, value)}
                    >
                      <SelectTrigger className={getStatusClass(ticket.status)}>
                        <SelectValue placeholder={ticket.status} />
                      </SelectTrigger>
                      <SelectContent>
                        <SelectItem value="–ù–æ–≤—ã–π">–ù–æ–≤—ã–π</SelectItem>
                        <SelectItem value="–í —Ä–∞–±–æ—Ç–µ">–í —Ä–∞–±–æ—Ç–µ</SelectItem>
                        <SelectItem value="–û–∂–∏–¥–∞–µ—Ç –∫–ª–∏–µ–Ω—Ç–∞">–û–∂–∏–¥–∞–µ—Ç –∫–ª–∏–µ–Ω—Ç–∞</SelectItem>
                        <SelectItem value="–ó–∞–∫—Ä—ã—Ç">–ó–∞–∫—Ä—ã—Ç</SelectItem>
                      </SelectContent>
                    </Select>
                  </TableCell>
                  <TableCell>
                    <Select 
                      value={ticket.assignedTo || ""} 
                      onValueChange={(value) => handleAssignmentChange(ticket.id, value)}
                    >
                      <SelectTrigger>
                        <SelectValue placeholder="–ù–µ –Ω–∞–∑–Ω–∞—á–µ–Ω" />
                      </SelectTrigger>
                      <SelectContent>
                        <SelectItem value="">–ù–µ –Ω–∞–∑–Ω–∞—á–µ–Ω</SelectItem>
                        <SelectItem value="–û–ø–µ—Ä–∞—Ç–æ—Ä 1">–û–ø–µ—Ä–∞—Ç–æ—Ä 1</SelectItem>
                        <SelectItem value="–û–ø–µ—Ä–∞—Ç–æ—Ä 2">–û–ø–µ—Ä–∞—Ç–æ—Ä 2</SelectItem>
                        <SelectItem value="–û–ø–µ—Ä–∞—Ç–æ—Ä 3">–û–ø–µ—Ä–∞—Ç–æ—Ä 3</SelectItem>
                      </SelectContent>
                    </Select>
                  </TableCell>
                  <TableCell>{formatDate(ticket.date)}</TableCell>
                  <TableCell>
                    <Button variant="ghost" size="sm" asChild>
                      <Link to={`/tickets/${ticket.id}`}>
                        –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å
                      </Link>
                    </Button>
                  </TableCell>
                </TableRow>
              ))
            ) : (
              <TableRow>
                <TableCell colSpan={8} className="text-center py-4">
                  –ù–µ—Ç —Ç–∏–∫–µ—Ç–æ–≤, —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏—Ö –∫—Ä–∏—Ç–µ—Ä–∏—è–º –ø–æ–∏—Å–∫–∞
                </TableCell>
              </TableRow>
            )}
          </TableBody>
        </Table>
      </div>
    </div>
  );
}
